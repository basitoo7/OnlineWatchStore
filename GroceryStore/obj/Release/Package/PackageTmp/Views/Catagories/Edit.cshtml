@model GroceryStore.Models.Catagory

@{
    if (TempData["Message"] != null)
    {<script type="text/javascript">

        alert(@Html.Raw(Json.Encode(TempData["Message"])))
    </script>}
          
}



<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/js/bootstrap.min.js"></script>
    <link href="~/css/bootstrap.css" rel="stylesheet" />
    <title>Edit</title>

    <style>
        .category h4 {
            text-align: center;
        }

        .category .FormContainer {
            width: 33%;
        }
    </style>



</head>
<body class="" background="/uploads/ProductsBackground.jpg" style="background-size:cover; width:auto; height:auto;">
    <div style="width:100%; margin-top:8%">
        <div class="container" style="width:29%;  margin:0 auto; padding:2% 0 2% 5%; background-color:rgba(0,0,0,0.25); border-radius:5px;">


            @Scripts.Render("~/bundles/jquery")
            @Scripts.Render("~/bundles/jqueryval")


            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <center><h4>Catagory</h4></center><br />

                    <div>
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(model => model.id)

                        <div class="form-group">
                            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.name)
                                @Html.ValidationMessageFor(model => model.name)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Is_deleted, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Is_deleted)
                                @Html.ValidationMessageFor(model => model.Is_deleted)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.is_created, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.is_created)
                                @Html.ValidationMessageFor(model => model.is_created)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.description)
                                @Html.ValidationMessageFor(model => model.description)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.is_active, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.is_active)
                                @Html.ValidationMessageFor(model => model.is_active)
                                <br /><input type="submit" value="Save" class="btn btn-default" />
                                <div class="btn btn-default">
                                    @Html.ActionLink("Back to List", "Index")
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <br /><div class="col-md-offset-2 col-md-8">

                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</body>

</html>
